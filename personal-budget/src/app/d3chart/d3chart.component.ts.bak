import { Component, OnInit } from '@angular/core';
import * as d3 from 'd3';

/* working example of a D3JS chart in Angular */

@Component({
  selector: 'pb-d3chart',
  templateUrl: './d3chart.component.html',
  styleUrls: ['./d3chart.component.scss']
})
export class D3ChartComponent implements OnInit {
  private data = [
    {name: 'A', value: 10},
    {name: 'B', value: 20},
    {name: 'C', value: 30},
    {name: 'D', value: 40},
  ];

  private svg: any;
  private margin = { top: 20, right: 20, bottom: 30, left: 40 };
  private width = 500 - this.margin.left - this.margin.right;
  private height = 400 - this.margin.top - this.margin.bottom;

  ngOnInit(): void {
    this.svg = d3.select("#d3chart")
      .append("svg")
      .attr("width", this.width + this.margin.left + this.margin.right)
      .attr("height", this.height + this.margin.top + this.margin.bottom)
      .append("g")
      .attr("transform", `translate(${this.margin.left}, ${this.margin.top})`);

    const x = d3.scaleBand()
      .domain(this.data.map(d => d.name))
      .range([0, this.width])
      .padding(0.1);

    this.svg.append("g")
      .attr("transform", `translate(0, ${this.height})`)
      .call(d3.axisBottom(x));

    const y = d3.scaleLinear()
      .domain([0, d3.max(this.data, d => d.value)!])
      .range([this.height, 0]);

    this.svg.append("g")
      .call(d3.axisLeft(y));

    this.svg.selectAll("rect")
      .data(this.data)
      .enter().append("rect")
      .attr("x", (d: any) => x(d.name)!)
      .attr("y", (d: any) => y(d.value))
      .attr("width", x.bandwidth())
      .attr("height", (d: any) => this.height - y(d.value))
      .attr("fill", "blue");
  }
}
